---
apiVersion: v1
kind: Template
metadata:
  name: swatch-api
parameters:
  - name: ENV_NAME
    value: env-swatch-api
  - name: IMAGE_PULL_SECRET
    value: quay-cloudservices-pull
  - name: IMAGE
    value: quay.io/cloudservices/rhsm-subscriptions
  - name: IMAGE_TAG
    value: latest
  - name: SERVER_MAX_HTTP_HEADER_SIZE
    value: '48000'
  - name: LOGGING_LEVEL_ROOT
    value: WARN
  - name: LOGGING_LEVEL
    value: INFO
  - name: RHSM_RBAC_HOST
    required: true
  - name: RHSM_RBAC_PORT
    value: '8080'
  - name: KAFKA_BOOTSTRAP_HOST
    required: true
  - name: REPLICAS
    value: '1'
  - name: MEMORY_REQUEST
    value: 256Mi
  - name: MEMORY_LIMIT
    value: 500Mi
  - name: CPU_REQUEST
    value: 200m
  - name: CPU_LIMIT
    value: 300m
  - name: DATABASE_CONNECTION_TIMEOUT_MS
    value: '30000'
  - name: DATABASE_MAX_POOL_SIZE
    value: '10'
objects:
  - apiVersion: cloud.redhat.com/v1alpha1
    kind: ClowdApp
    metadata:
      name: swatch-api
    pullSecrets:
      name: ${IMAGE_PULL_SECRET}
    spec:
      envName: ${ENV_NAME}
      # Can't have this checked in like this, because stage gets upset since there
      # is no rhsm ClowdApp deployed to the rhsm-stage namespace
      # database:
      #   sharedDbAppName: rhsm
      # dependencies:
      #   - rhsm
      deployments:
        - name: service
          minReplicas: 1
          webServices:
            public:
              enabled: true
          podSpec:
            image: ${IMAGE}:${IMAGE_TAG}
            command:
              - /bin/bash
              - /usr/local/s2i/run
            initContainers:
              - image: ${IMAGE}:${IMAGE_TAG}
                name: liquibase
                env:
                  - name: SPRING_PROFILES_ACTIVE
                    value: liquibase-only
                  - name: JAVA_MAX_MEM_RATIO
                    value: '85'
                  - name: GC_MAX_METASPACE_SIZE
                    value: '256'
                  - name: DATABASE_HOST
                    valueFrom:
                      secretKeyRef:
                        name: rhsm-db
                        key: db.host
                  - name: DATABASE_PORT
                    valueFrom:
                      secretKeyRef:
                        name: rhsm-db
                        key: db.port
                  - name: DATABASE_USERNAME
                    valueFrom:
                      secretKeyRef:
                        name: rhsm-db
                        key: db.user
                  - name: DATABASE_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: rhsm-db
                        key: db.password
                  - name: DATABASE_DATABASE
                    valueFrom:
                      secretKeyRef:
                        name: rhsm-db
                        key: db.name
                resources:
                  requests:
                    cpu: ${CPU_REQUEST}
                    memory: ${MEMORY_REQUEST}
                  limits:
                    cpu: ${CPU_LIMIT}
                    memory: ${MEMORY_LIMIT}
            env:
              - name: SERVER_MAX_HTTP_HEADER_SIZE
                value: ${SERVER_MAX_HTTP_HEADER_SIZE}
              - name: LOG_FILE
                value: /logs/server.log
              - name: SPRING_PROFILES_ACTIVE
                value: api
              - name: JAVA_MAX_MEM_RATIO
                value: '85'
              - name: GC_MAX_METASPACE_SIZE
                value: '256'
              - name: LOGGING_LEVEL_ROOT
                value: ${LOGGING_LEVEL_ROOT}
              - name: LOGGING_LEVEL_ORG_CANDLEPIN
                value: ${LOGGING_LEVEL}
              - name: KAFKA_BOOTSTRAP_HOST
                value: ${KAFKA_BOOTSTRAP_HOST}
              - name: RHSM_RBAC_HOST
                value: ${RHSM_RBAC_HOST}
              - name: RHSM_RBAC_PORT
                value: ${RHSM_RBAC_PORT}
              - name: DATABASE_HOST
                valueFrom:
                  secretKeyRef:
                    name: rhsm-db
                    key: db.host
              - name: DATABASE_PORT
                valueFrom:
                  secretKeyRef:
                    name: rhsm-db
                    key: db.port
              - name: DATABASE_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: rhsm-db
                    key: db.user
              - name: DATABASE_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: rhsm-db
                    key: db.password
              - name: DATABASE_DATABASE
                valueFrom:
                  secretKeyRef:
                    name: rhsm-db
                    key: db.name
              - name: DATABASE_CONNECTION_TIMEOUT_MS
                value: ${DATABASE_CONNECTION_TIMEOUT_MS}
              - name: DATABASE_MAX_POOL_SIZE
                value: ${DATABASE_MAX_POOL_SIZE}
              - name: INVENTORY_DATABASE_HOST
                valueFrom:
                  secretKeyRef:
                    name: host-inventory-db-readonly
                    key: db.host
              - name: INVENTORY_DATABASE_DATABASE
                valueFrom:
                  secretKeyRef:
                    name: host-inventory-db-readonly
                    key: db.name
              - name: INVENTORY_DATABASE_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: host-inventory-db-readonly
                    key: db.user
              - name: INVENTORY_DATABASE_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: host-inventory-db-readonly
                    key: db.password
              - name: SWATCH_SELF_PSK
                valueFrom:
                  secretKeyRef:
                    name: swatch-psks
                    key: self
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /health/liveness
                port: 9000
                scheme: HTTP
              initialDelaySeconds: 15
              periodSeconds: 20
              successThreshold: 1
              timeoutSeconds: 5
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /health
                port: 9000
                scheme: HTTP
              initialDelaySeconds: 15
              periodSeconds: 20
              successThreshold: 1
              timeoutSeconds: 5
            resources:
              requests:
                cpu: ${CPU_REQUEST}
                memory: ${MEMORY_REQUEST}
              limits:
                cpu: ${CPU_LIMIT}
                memory: ${MEMORY_LIMIT}
            volumeMounts:
              - name: logs
                mountPath: /logs
              - name: pinhead
                mountPath: /pinhead
            volumes:
              - name: logs
                emptyDir:
              - name: pinhead
                secret:
                  secretName: pinhead
